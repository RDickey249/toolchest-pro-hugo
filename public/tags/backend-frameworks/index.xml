<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>backend-frameworks on ToolChest</title><link>https://toolchest.pro/tags/backend-frameworks/</link><description>Recent content in backend-frameworks on ToolChest</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://toolchest.pro/tags/backend-frameworks/index.xml" rel="self" type="application/rss+xml"/><item><title>Express.js</title><link>https://toolchest.pro/categories/express.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toolchest.pro/categories/express.js/</guid><description>Express.js is a fast, unopinionated web framework for Node.js that provides a robust set of features for web and mobile applications with middleware architecture.
Key Features Minimalist routing - HTTP verb routing with parameters Middleware system - Composable request processing functions Template engines - Support for EJS, Pug, Handlebars, etc. Error handling - Built-in error handling middleware Static files - Serve static assets efficiently HTTP utilities - Request/response helper methods Extensible - Rich npm middleware ecosystem Use Cases REST APIs and web services Single-page application backends Microservices architecture Real-time applications Rapid prototyping Get Started with Express.</description></item><item><title>FastAPI</title><link>https://toolchest.pro/categories/fastapi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toolchest.pro/categories/fastapi/</guid><description>FastAPI is a modern Python web framework for building APIs with automatic interactive documentation, based on standard Python type hints.
Key Features Type hints - Automatic validation based on Python types High performance - Async/await with speed comparable to Node.js Auto documentation - Interactive OpenAPI docs with Swagger UI Dependency injection - Flexible dependency system WebSocket support - Real-time communication capabilities Background tasks - Async task processing Security - OAuth2, JWT, API key authentication Editor support - Excellent IDE integration Use Cases High-performance APIs Machine learning model serving Microservices architecture Real-time applications Data processing pipelines Get Started with FastAPI Build high-performance Python APIs with automatic docs.</description></item><item><title>Flask</title><link>https://toolchest.pro/categories/flask/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toolchest.pro/categories/flask/</guid><description>Flask is a lightweight Python web framework with a simple, extensible core that gives developers flexibility to build web applications and APIs.
Key Features Simple routing - Decorator-based URL routing Jinja2 templates - Powerful templating with inheritance Request handling - Built-in request and response objects Blueprints - Modular application organization Extension ecosystem - Rich third-party extension library Development server - Built-in server with debugging WSGI compliant - Deploy on any WSGI server Use Cases REST APIs and microservices Rapid prototyping Small to medium web applications Learning web development Custom web solutions Get Started with Flask Build flexible Python web applications with minimal complexity.</description></item><item><title>NestJS</title><link>https://toolchest.pro/categories/nestjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toolchest.pro/categories/nestjs/</guid><description>NestJS is a progressive Node.js framework that uses TypeScript by default and combines object-oriented, functional, and reactive programming paradigms with Angular-inspired architecture.
Key Features TypeScript-first - Built-in TypeScript support with decorators Dependency injection - Powerful DI container with modules GraphQL integration - Code-first and schema-first approaches Microservices - Native support with inter-service communication Testing framework - Built-in unit and e2e testing utilities WebSocket support - Real-time communication gateways Database integration - TypeORM and Mongoose support Enterprise features - Authentication, logging, health checks Use Cases Enterprise Node.</description></item><item><title>Spring Boot</title><link>https://toolchest.pro/categories/spring-boot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toolchest.pro/categories/spring-boot/</guid><description>Spring Boot is a Java framework that simplifies Spring application development with auto-configuration, embedded servers, and production-ready features.
Key Features Auto-configuration - Intelligent setup based on dependencies Embedded servers - Built-in Tomcat, Jetty, or Undertow Starter dependencies - Curated dependency collections Actuator - Production monitoring and health checks Spring Security - Authentication and authorization Data access - Spring Data JPA integration Cloud-native - Configuration and service discovery Developer tools - Hot reload and automatic restart Use Cases Enterprise Java applications Microservices architecture REST API development Production-ready services Cloud-native applications Get Started with Spring Boot Create production-ready Java applications with minimal configuration.</description></item></channel></rss>